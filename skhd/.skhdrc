#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# add an on_enter command to the default mode
:: default : chunkc border::color 0xff775759

# defines a new mode 'resize' with an on_enter command, that captures keypresses
:: resize @ : chunkc border::color 0xff24ccaa

# from 'default' mode, activate mode 'resize'
alt - r ; resize

# from 'resize' mode, activate mode 'default'
resize < escape ; default

# close focused window
alt - w : chunkc tiling::window --close

# focus window
alt - h : chunkc tiling::window --focus west
alt - j : chunkc tiling::window --focus south
alt - k : chunkc tiling::window --focus north
alt - l : chunkc tiling::window --focus east

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
shift + alt - h : chunkc tiling::window --swap west
shift + alt - j : chunkc tiling::window --swap south
shift + alt - k : chunkc tiling::window --swap north
shift + alt - l : chunkc tiling::window --swap east

# send window to desktop and follow focus
shift + alt - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1
shift + alt - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2
shift + alt - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3
shift + alt - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4
shift + alt - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5
shift + alt - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6
shift + alt - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop --focus 7
shift + alt - 8 : chunkc tiling::window --send-to-desktop 8; chunkc tiling::desktop --focus 8
shift + alt - 9 : chunkc tiling::window --send-to-desktop 9; chunkc tiling::desktop --focus 9
shift + alt - 0 : chunkc tiling::window --send-to-desktop 10; chunkc tiling::desktop --focus 10

# focus monitor
#ctrl + alt - z  : chunkc tiling::monitor -f prev
#ctrl + alt - c  : chunkc tiling::monitor -f next
#ctrl + alt - 1  : chunkc tiling::monitor -f 1
#ctrl + alt - 2  : chunkc tiling::monitor -f 2
#ctrl + alt - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
#ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
#ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
#ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
#ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
resize < alt - h : chunkc tiling::window --use-temporary-ratio 0.09 --adjust-window-edge west
resize < alt - j : chunkc tiling::window --use-temporary-ratio 0.09 --adjust-window-edge south
resize < alt - k : chunkc tiling::window --use-temporary-ratio 0.09 --adjust-window-edge north
resize < alt - l : chunkc tiling::window --use-temporary-ratio 0.09 --adjust-window-edge east

# decrease region size
resize < alt - p : chunkc tiling::window --use-temporary-ratio -0.09 --adjust-window-edge west
resize < alt - o : chunkc tiling::window --use-temporary-ratio -0.09 --adjust-window-edge south
resize < alt - i : chunkc tiling::window --use-temporary-ratio -0.09 --adjust-window-edge north
resize < alt - u : chunkc tiling::window --use-temporary-ratio -0.09 --adjust-window-edge east

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
#shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
#alt - d : chunkc tiling::window --toggle parent

# toggle window split type
#alt - e : chunkc tiling::window --toggle split

# toggle window fade
#alt - q : chunkc tiling::window --toggle fade

# change layout of desktop
#ctrl + alt - a : chunkc tiling::desktop --layout bsp
#ctrl + alt - s : chunkc tiling::desktop --layout monocle
#ctrl + alt - d : chunkc tiling::desktop --layout float

# Open applications
alt - p : open -a firefox
alt - m : open -a mail
alt - n : open -a calendar
alt - b : open -a "Basecamp 3"
alt - s : open -a Slack
alt - t : open -a iTerm
